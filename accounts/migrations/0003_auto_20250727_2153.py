# Generated by Django 4.2.7 on 2025-07-27 16:53

from django.db import migrations
from django.utils import timezone
import pytz


def fix_naive_datetimes(apps, schema_editor):
    """Fix naive datetime values by converting them to timezone-aware datetimes"""
    User = apps.get_model('accounts', 'User')
    
    # Set timezone to Asia/Karachi as configured in settings
    karachi_tz = pytz.timezone('Asia/Karachi')
    
    # Update User date_joined fields that are naive
    for user in User.objects.all():
        if user.date_joined and timezone.is_naive(user.date_joined):
            # Convert naive datetime to timezone-aware datetime
            aware_datetime = karachi_tz.localize(user.date_joined)
            user.date_joined = aware_datetime
            user.save(update_fields=['date_joined'])
        
        if user.last_login and timezone.is_naive(user.last_login):
            # Convert naive datetime to timezone-aware datetime
            aware_datetime = karachi_tz.localize(user.last_login)
            user.last_login = aware_datetime
            user.save(update_fields=['last_login'])


def reverse_fix_naive_datetimes(apps, schema_editor):
    """Reverse operation - not needed but good practice"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_user_wishlist_alter_user_email_alter_user_role'),
    ]

    operations = [
        migrations.RunPython(fix_naive_datetimes, reverse_fix_naive_datetimes),
    ]
