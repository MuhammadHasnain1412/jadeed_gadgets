# Generated by Django 4.2.7 on 2025-07-27 16:54

from django.db import migrations
from django.utils import timezone
import pytz


def fix_naive_datetimes_orders(apps, schema_editor):
    """Fix naive datetime values in orders by converting them to timezone-aware datetimes"""
    Order = apps.get_model('orders', 'Order')
    
    # Set timezone to Asia/Karachi as configured in settings
    karachi_tz = pytz.timezone('Asia/Karachi')
    
    # Update Order created_at fields that are naive
    for order in Order.objects.all():
        if order.created_at and timezone.is_naive(order.created_at):
            # Convert naive datetime to timezone-aware datetime
            aware_datetime = karachi_tz.localize(order.created_at)
            order.created_at = aware_datetime
            order.save(update_fields=['created_at'])
        
        # Also fix updated_at if it exists and is naive
        if hasattr(order, 'updated_at') and order.updated_at and timezone.is_naive(order.updated_at):
            aware_datetime = karachi_tz.localize(order.updated_at)
            order.updated_at = aware_datetime
            order.save(update_fields=['updated_at'])


def reverse_fix_naive_datetimes_orders(apps, schema_editor):
    """Reverse operation - not needed but good practice"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0002_order_customer_name_order_payment_method'),
    ]

    operations = [
        migrations.RunPython(fix_naive_datetimes_orders, reverse_fix_naive_datetimes_orders),
    ]
